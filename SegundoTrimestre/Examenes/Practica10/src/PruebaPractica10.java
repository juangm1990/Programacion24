/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DAW05
 */
public class PruebaPractica10 extends javax.swing.JFrame {

    /**
     * Creates new form PruebaPractica10
     */
    public PruebaPractica10() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        cmbHora.removeAllItems();
        cmbHora.addItem("09:00");
    cmbHora.addItem("10:00");
    cmbHora.addItem("11:00");
    cmbHora.addItem("12:00");
    cmbHora.addItem("13:00");
    cmbHora.addItem("14:00");
    cmbHora.addItem("15:00");
    cmbHora.addItem("16:00");
    cmbHora.addItem("17:00");
    cmbHora.addItem("18:00");
    cmbHora.addItem("19:00");
    cmbHora.addItem("20:00");
    
    jComboBox3.removeAllItems();
    jComboBox3.addItem("60");
    jComboBox3.addItem("90");
    jComboBox3.addItem("120");
    
        jComboBox2.removeAllItems();
    for (int i = 1; i <= 6; i++) {
        jComboBox2.addItem(String.valueOf(i));
    }
    }
 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cmbHora = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre");

        jLabel2.setText("Pista");

        jLabel3.setText("Fecha (YYYY-MM-DD)");

        jLabel4.setText("Hora");

        cmbHora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbHora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbHoraActionPerformed(evt);
            }
        });

        jButton1.setText("Guardar reserva");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setText("Duración minutos");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1)
                            .addComponent(jComboBox2, 0, 102, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField2)
                            .addComponent(jComboBox3, 0, 206, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbHora, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(cmbHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jButton1)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        jButton3.setText("Mostrar reservas del día");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(297, 297, 297)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addGap(0, 191, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void cmbHoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbHoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbHoraActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        String nombre = jTextField1.getText();
    String fecha = jTextField2.getText(); // formato: YYYY-MM-DD
    String hora = (String) cmbHora.getSelectedItem();
    int pista = Integer.parseInt((String) jComboBox2.getSelectedItem());
    int duracion = Integer.parseInt((String) jComboBox3.getSelectedItem());

    // Conectar e insertar
    try {
        java.sql.Connection con = ConexionBD.conectar();
        String sql = "INSERT INTO reservas (nombre, fecha, hora_inicio, pista, duracion) VALUES (?, ?, ?, ?, ?)";
        java.sql.PreparedStatement ps = con.prepareStatement(sql);
        ps.setString(1, nombre);
        ps.setString(2, fecha);
        ps.setString(3, hora);
        ps.setInt(4, pista);
        ps.setInt(5, duracion);
        ps.executeUpdate();

        javax.swing.JOptionPane.showMessageDialog(null, "✅ Reserva guardada correctamente");

        ps.close();
        con.close();

    } catch (Exception e) {
        javax.swing.JOptionPane.showMessageDialog(null, "❌ Error al guardar: " + e.getMessage());
    }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        String fecha = jTextField2.getText(); // formato YYYY-MM-DD

    DefaultTableModel modelo = new DefaultTableModel();
    modelo.addColumn("Hora");
    for (int i = 1; i <= 6; i++) {
        modelo.addColumn("Pista " + i);
    }

    String[] horas = { "09:00", "10:00", "11:00", "12:00", "13:00", 
                       "14:00", "15:00", "16:00", "17:00", "18:00", 
                       "19:00", "20:00" };

    for (String h : horas) {
        Object[] fila = new Object[7];
        fila[0] = h;
        for (int i = 1; i <= 6; i++) {
            fila[i] = "";
        }
        modelo.addRow(fila);
    }

    try {
        java.sql.Connection con = ConexionBD.conectar();
        String sql = "SELECT nombre, hora_inicio, pista FROM reservas WHERE fecha = ?";
        java.sql.PreparedStatement ps = con.prepareStatement(sql);
        ps.setString(1, fecha);
        java.sql.ResultSet rs = ps.executeQuery();

        

            while (rs.next()) {
    String nombre = rs.getString("nombre");
    String hora = rs.getString("hora_inicio").substring(0, 5);
    int pista = rs.getInt("pista");
    int duracion = rs.getInt("duracion"); // 👈 nueva línea

    int bloques = duracion / 60; // cuántas casillas ocupar
    for (int fila = 0; fila < modelo.getRowCount(); fila++) {
        if (modelo.getValueAt(fila, 0).equals(hora)) {
            for (int i = 0; i < bloques && fila + i < modelo.getRowCount(); i++) {
                modelo.setValueAt(i == 0 ? nombre : "■", fila + i, pista); // primera celda con nombre, resto con "■"
            }
            break;
        }
    }
}


        rs.close();
        ps.close();
        con.close();

    } catch (Exception e) {
        javax.swing.JOptionPane.showMessageDialog(null, "Error al cargar reservas: " + e.getMessage());
    }

    jTable1.setModel(modelo);
    
    jTable1.setDefaultRenderer(Object.class, new javax.swing.table.DefaultTableCellRenderer() {
    @Override
    public java.awt.Component getTableCellRendererComponent(javax.swing.JTable table, Object value,
            boolean isSelected, boolean hasFocus, int row, int column) {

        java.awt.Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);

        if (column == 0) {
            c.setBackground(java.awt.Color.WHITE); // Columna "Hora"
        } else {
            if (value != null && !value.toString().isEmpty()) {
                c.setBackground(new java.awt.Color(255, 150, 150)); // 🟥 Ocupado
            } else {
                c.setBackground(new java.awt.Color(200, 255, 200)); // 🟩 Libre
            }
        }

        return c;
    }
});

        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        
        int fila = jTable1.getSelectedRow();
int columna = jTable1.getSelectedColumn();

if (columna >= 1 && columna <= 6) {
    String valor = (String) jTable1.getValueAt(fila, columna);
    String hora = (String) jTable1.getValueAt(fila, 0);
    int pista = columna;
    String fecha = jTextField2.getText();

    if (valor == null || valor.equals("")) {
        // CELDA LIBRE - Insertar nueva reserva
        String nombre = javax.swing.JOptionPane.showInputDialog(this, "Introduce el nombre:");

        if (nombre != null && !nombre.isEmpty()) {
            try {
                java.sql.Connection con = ConexionBD.conectar();
                String sql = "INSERT INTO reservas (nombre, fecha, hora_inicio, pista, duracion) VALUES (?, ?, ?, ?, ?)";
                java.sql.PreparedStatement ps = con.prepareStatement(sql);
                ps.setString(1, nombre);
                ps.setString(2, fecha);
                ps.setString(3, hora);
                ps.setInt(4, pista);
               String duracionStr = javax.swing.JOptionPane.showInputDialog(this, "Duración en minutos:", "60");
int duracion = Integer.parseInt(duracionStr);
ps.setInt(5, duracion); // duración personalizada



                ps.executeUpdate();
                ps.close();
                con.close();

                // 🔥 Mostrar el nombre inmediatamente
                

                javax.swing.JOptionPane.showMessageDialog(this, "✅ Reserva guardada");

                // (opcional) Refrescar toda la tabla desde la base de datos
                jButton2.doClick();

            } catch (Exception e) {
                javax.swing.JOptionPane.showMessageDialog(this, "❌ Error al guardar: " + e.getMessage());
            }
        }

    } else {
        // CELDA OCUPADA - Preguntar para cancelar
        int confirm = javax.swing.JOptionPane.showConfirmDialog(this,
            "¿Quieres cancelar la reserva de " + valor + "?",
            "Cancelar reserva",
            javax.swing.JOptionPane.YES_NO_OPTION);

        if (confirm == javax.swing.JOptionPane.YES_OPTION) {
            try {
                java.sql.Connection con = ConexionBD.conectar();
                String sql = "DELETE FROM reservas WHERE nombre = ? AND fecha = ? AND hora_inicio = ? AND pista = ?";
                java.sql.PreparedStatement ps = con.prepareStatement(sql);
                ps.setString(1, valor);
                ps.setString(2, fecha);
                ps.setString(3, hora);
                ps.setInt(4, pista);

                ps.executeUpdate();
                ps.close();
                con.close();
                

                // 🔥 Borrar el nombre de la celda visualmente
                jTable1.setValueAt("", fila, columna);

                javax.swing.JOptionPane.showMessageDialog(this, "✅ Reserva cancelada");

                // (opcional) Refrescar toda la tabla desde la base de datos
                jButton2.doClick();

            } catch (Exception e) {
                javax.swing.JOptionPane.showMessageDialog(this, "❌ Error al cancelar: " + e.getMessage());
            }
        }
    }
}


    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PruebaPractica10.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PruebaPractica10.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PruebaPractica10.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PruebaPractica10.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PruebaPractica10().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbHora;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
